version: '2.4'
services:
 dnsmain:
   container_name: "dnsmain"
   hostname: "dnsmain"
   image: "bashmeunix/book:latest"
   ports:
     - "127.0.0.1:5000:5000"
     - "127.0.0.1:9095:9090"
   environment:
     - ENV=PROD
   volumes:
     - "./app:/app"
     - "./entry-point.sh:/entry-point.sh"
   depends_on:
     - resolver
     - redis
 resolver:
   container_name: "resolver"
   hostname: "resolver"
   image: "bashmeunix/ptr:0.1"
   depends_on:
     - redis
 redis:
   container_name: "redis"
   hostname: "redis"
   image: "redis:latest"
   volumes:
     - type: volume
       source: redis_db
       target: /data
 logspout:
   image: bashmeunix/logspout:0.1
   container_name: "logspout"
   hostname: "logspout"
   volumes:
     - /var/run/docker.sock:/var/run/docker.sock
   ports:
     - "127.0.0.1:8000:80"
   depends_on:
     logstash:
       condition: service_healthy
   restart: always
   command: logstash://logstash:5000
 logstash:
   container_name: "logstash"
   hostname: "logstash"
   image: logstash:6.8.8
   mem_limit: 512m
   volumes:
     - ./logstash.conf:/etc/logstash.conf
     - ./nginx_access:/home/nginx_access
   ports:
     - 127.0.0.1:5044:5044/udp
   environment:
     ES_JAVA_OPTS: "-Xms512m -Xmx512m"
     LOGSPOUT: ignore
   healthcheck:
     test: ["CMD", "curl", "http://localhost:9600/"]
     interval: 3s
     timeout: 3s
     retries: 10
     start_period: 60s
   depends_on:
     - elasticsearch
   command: logstash -f /etc/logstash.conf
 elasticsearch:
   container_name: "elasticsearch"
   hostname: "elasticsearch"
   image: elasticsearch:6.8.8
   mem_limit: 1024m
   volumes:
     - type: volume
       source: elk_data
       target: /usr/share/elasticsearch/data
   environment:
     LOGSPOUT: ignore
 kibana:
   container_name: "kibana"
   hostname: "kibana"
   image: kibana:6.8.8
   environment:
     LOGSPOUT: ignore
     ELASTICSEARCH_URL: http://elasticsearch:9200
   depends_on:
     - elasticsearch
   ports:
     - 127.0.0.1:5601:5601

volumes:
  redis_db:
  elk_data:
